/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@ionic/core';
import 'ionicons';
import {
  PhotoType,
} from './models/photo-type';


export namespace Components {

  interface BlockImg {
    'photoId': string;
    'phototType': PhotoType;
    'refresh': boolean;
    'rotate': boolean;
  }
  interface BlockImgAttributes extends StencilHTMLAttributes {
    'photoId'?: string;
    'phototType'?: PhotoType;
    'refresh'?: boolean;
    'rotate'?: boolean;
  }

  interface SelectAlbum {
    'selectedPhotos': any[];
  }
  interface SelectAlbumAttributes extends StencilHTMLAttributes {
    'selectedPhotos'?: any[];
  }

  interface AppPlaylists {}
  interface AppPlaylistsAttributes extends StencilHTMLAttributes {}

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface AppSettings {}
  interface AppSettingsAttributes extends StencilHTMLAttributes {}

  interface AppSignin {}
  interface AppSigninAttributes extends StencilHTMLAttributes {}

  interface AppSong {
    'albumId': string;
    'photoId': string;
    'updateCallback': any;
  }
  interface AppSongAttributes extends StencilHTMLAttributes {
    'albumId'?: string;
    'photoId'?: string;
    'updateCallback'?: any;
  }

  interface AppSongs {
    'photoId': string;
    'playlistId': string;
  }
  interface AppSongsAttributes extends StencilHTMLAttributes {
    'photoId'?: string;
    'playlistId'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'BlockImg': Components.BlockImg;
    'SelectAlbum': Components.SelectAlbum;
    'AppPlaylists': Components.AppPlaylists;
    'AppRoot': Components.AppRoot;
    'AppSettings': Components.AppSettings;
    'AppSignin': Components.AppSignin;
    'AppSong': Components.AppSong;
    'AppSongs': Components.AppSongs;
  }

  interface StencilIntrinsicElements {
    'block-img': Components.BlockImgAttributes;
    'select-album': Components.SelectAlbumAttributes;
    'app-playlists': Components.AppPlaylistsAttributes;
    'app-root': Components.AppRootAttributes;
    'app-settings': Components.AppSettingsAttributes;
    'app-signin': Components.AppSigninAttributes;
    'app-song': Components.AppSongAttributes;
    'app-songs': Components.AppSongsAttributes;
  }


  interface HTMLBlockImgElement extends Components.BlockImg, HTMLStencilElement {}
  var HTMLBlockImgElement: {
    prototype: HTMLBlockImgElement;
    new (): HTMLBlockImgElement;
  };

  interface HTMLSelectAlbumElement extends Components.SelectAlbum, HTMLStencilElement {}
  var HTMLSelectAlbumElement: {
    prototype: HTMLSelectAlbumElement;
    new (): HTMLSelectAlbumElement;
  };

  interface HTMLAppPlaylistsElement extends Components.AppPlaylists, HTMLStencilElement {}
  var HTMLAppPlaylistsElement: {
    prototype: HTMLAppPlaylistsElement;
    new (): HTMLAppPlaylistsElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppSettingsElement extends Components.AppSettings, HTMLStencilElement {}
  var HTMLAppSettingsElement: {
    prototype: HTMLAppSettingsElement;
    new (): HTMLAppSettingsElement;
  };

  interface HTMLAppSigninElement extends Components.AppSignin, HTMLStencilElement {}
  var HTMLAppSigninElement: {
    prototype: HTMLAppSigninElement;
    new (): HTMLAppSigninElement;
  };

  interface HTMLAppSongElement extends Components.AppSong, HTMLStencilElement {}
  var HTMLAppSongElement: {
    prototype: HTMLAppSongElement;
    new (): HTMLAppSongElement;
  };

  interface HTMLAppSongsElement extends Components.AppSongs, HTMLStencilElement {}
  var HTMLAppSongsElement: {
    prototype: HTMLAppSongsElement;
    new (): HTMLAppSongsElement;
  };

  interface HTMLElementTagNameMap {
    'block-img': HTMLBlockImgElement
    'select-album': HTMLSelectAlbumElement
    'app-playlists': HTMLAppPlaylistsElement
    'app-root': HTMLAppRootElement
    'app-settings': HTMLAppSettingsElement
    'app-signin': HTMLAppSigninElement
    'app-song': HTMLAppSongElement
    'app-songs': HTMLAppSongsElement
  }

  interface ElementTagNameMap {
    'block-img': HTMLBlockImgElement;
    'select-album': HTMLSelectAlbumElement;
    'app-playlists': HTMLAppPlaylistsElement;
    'app-root': HTMLAppRootElement;
    'app-settings': HTMLAppSettingsElement;
    'app-signin': HTMLAppSigninElement;
    'app-song': HTMLAppSongElement;
    'app-songs': HTMLAppSongsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
